#ifndef __LIBMAPI_PROTO_PRIVATE_H__
#define __LIBMAPI_PROTO_PRIVATE_H__

#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2) PRINTF_ATTRIBUTE(a1, a2)

#ifndef __BEGIN_DECLS
#ifdef __cplusplus
#define __BEGIN_DECLS		extern "C" {
#define __END_DECLS		}
#else
#define __BEGIN_DECLS
#define __END_DECLS
#endif
#endif

__BEGIN_DECLS

/* This file was automatically generated by mkproto.pl. DO NOT EDIT */

/* this file contains prototypes for functions that are private 
 * to this subsystem or library. These functions should not be 
 * used outside this particular subsystem! */


/* The following definitions come from libmapi/nspi.c  */

int nspi_disconnect_dtor(void *);

/* The following definitions come from libmapi/emsmdb.c  */

struct emsmdb_context *emsmdb_connect(TALLOC_CTX *, 				      struct mapi_session *session,
				      struct dcerpc_pipe *p, 
				      struct cli_credentials *cred,
int *);
int emsmdb_disconnect_dtor(void *);
enum MAPISTATUS emsmdb_disconnect(struct emsmdb_context *);
struct mapi_notify_ctx *emsmdb_bind_notification(TALLOC_CTX *);
NTSTATUS emsmdb_register_notification(struct NOTIFKEY *, uint16_t);
void free_emsmdb_property(struct SPropValue *, void *);
const void *pull_emsmdb_property(TALLOC_CTX *,				 struct loadparm_context *lp_ctx,
				 uint32_t *offset, 
				 enum MAPITAGS tag, 
DATA_BLOB *);
enum MAPISTATUS emsmdb_get_SPropValue(TALLOC_CTX *,				      struct loadparm_context *lp_ctx,
				      DATA_BLOB *content,
				      struct SPropTagArray *tags,
				      struct SPropValue **propvals, 
				      uint32_t *cn_propvals,
uint8_t);
void emsmdb_get_SRow(TALLOC_CTX *,		     struct loadparm_context *lp_ctx,
		     struct SRow *aRow, 
		     struct SPropTagArray *proptags, 
		     uint16_t propcount, 
		     DATA_BLOB *content, 
		     uint8_t flag, 
uint8_t);

/* The following definitions come from libmapi/cdo_mapi.c  */


/* The following definitions come from libmapi/simple_mapi.c  */


/* The following definitions come from libmapi/mapitags.c  */


/* The following definitions come from libmapi/mapicode.c  */

void set_errno(enum MAPISTATUS);

/* The following definitions come from libmapi/mapidump.c  */


/* The following definitions come from libmapi/mapi_object.c  */

int mapi_object_is_invalid(mapi_object_t *);
void mapi_object_set_id(mapi_object_t *, mapi_id_t);
mapi_handle_t mapi_object_get_handle(mapi_object_t *);
void mapi_object_set_handle(mapi_object_t *, mapi_handle_t);
void mapi_object_table_init(TALLOC_CTX *, mapi_object_t *);
enum MAPISTATUS mapi_object_bookmark_find(mapi_object_t *, uint32_t,struct SBinary_short *);

/* The following definitions come from libmapi/mapi_id_array.c  */


/* The following definitions come from libmapi/mapi_nameid.c  */


/* The following definitions come from libmapi/property.c  */

enum MAPITAGS *get_MAPITAGS_SRow(TALLOC_CTX *, struct SRow *);
uint32_t MAPITAGS_delete_entries(enum MAPITAGS *, uint32_t, uint32_t, ...);

/* The following definitions come from libmapi/IABContainer.c  */


/* The following definitions come from libmapi/IProfAdmin.c  */

enum MAPISTATUS OpenProfileStore(TALLOC_CTX *, struct ldb_context **, const char *);

/* The following definitions come from libmapi/IMAPIContainer.c  */


/* The following definitions come from libmapi/IMAPIFolder.c  */


/* The following definitions come from libmapi/IMAPIProp.c  */


/* The following definitions come from libmapi/IMAPISession.c  */


/* The following definitions come from libmapi/IMAPISupport.c  */

enum MAPISTATUS ProcessNotification(struct mapi_notify_ctx *, struct mapi_response *);

/* The following definitions come from libmapi/IMAPITable.c  */

uint32_t get_mapi_SRestriction_size(struct mapi_SRestriction *);

/* The following definitions come from libmapi/IMSProvider.c  */

enum MAPISTATUS Logon(struct mapi_session *,		      struct mapi_provider *provider, 
enum PROVIDER_ID);
enum MAPISTATUS GetNewLogonId(struct mapi_session *, uint8_t *);

/* The following definitions come from libmapi/IMessage.c  */

uint8_t mapi_recipients_get_org_length(struct mapi_profile *);
uint16_t mapi_recipients_RecipientFlags(struct SRow *);

/* The following definitions come from libmapi/IMsgStore.c  */


/* The following definitions come from libmapi/IStoreFolder.c  */


/* The following definitions come from libmapi/IUnknown.c  */


/* The following definitions come from libmapi/IStream.c  */


/* The following definitions come from libmapi/IXPLogon.c  */


/* The following definitions come from libmapi/FXICS.c  */


/* The following definitions come from libmapi/freebusy.c  */


/* The following definitions come from libmapi/x500.c  */


/* The following definitions come from libmapi/lzfu.c  */


/* The following definitions come from libmapi/utils.c  */


/* The following definitions come from libmapi/util/lcid.c  */


/* The following definitions come from libmapi/util/codepage.c  */

bool print_codepage_infos(uint32_t);

/* The following definitions come from libmapi/socket/interface.c  */

void load_interfaces(TALLOC_CTX *, const char **, struct interface **);
int iface_count(struct interface *);
const char *iface_n_ip(struct interface *, int);
const char *iface_n_bcast(struct interface *, int);
const char *iface_n_netmask(struct interface *, int);
const char *iface_best_ip(struct interface *, const char *);
bool iface_is_local(struct interface *, const char *);
bool iface_same_net(const char *, const char *, const char *);

/* The following definitions come from libmapi/socket/netif.c  */


__END_DECLS

#undef _PRINTF_ATTRIBUTE
#define _PRINTF_ATTRIBUTE(a1, a2)

#endif /* __LIBMAPI_PROTO_PRIVATE_H__ */

